alem_1516_leccion_05
system:sage


{{{id=103|
# MATRICES
///
}}}

{{{id=1|
R = Integers(5)
///
}}}

{{{id=2|
M1 = matrix(R,3,[0,1,2,3,4,5,6,7,8]); M1
///
[0 1 2]
[3 4 0]
[1 2 3]
}}}

{{{id=104|
show(M1)
///
<html><div class="math">\newcommand{\Bold}[1]{\mathbf{#1}}\left(\begin{array}{rrr}
0 & 1 & 2 \\
3 & 4 & 0 \\
1 & 2 & 3
\end{array}\right)</div></html>
}}}

{{{id=3|
A = random_matrix(QQ,3,5); A
///
[   1   -2    2   -2   -2]
[   2   -1    1 -1/2    1]
[   1    1    0    0   -2]
}}}

{{{id=4|
B = matrix(ZZ,[[1,2,3],[-3,-2,-1]]); B
///
[ 1  2  3]
[-3 -2 -1]
}}}

{{{id=5|
B[0,1]
///
2
}}}

{{{id=6|
B.parent()
///
Full MatrixSpace of 2 by 3 dense matrices over Integer Ring
}}}

{{{id=7|
X = B.type()
///
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "_sage_input_15.py", line 10, in <module>
    exec compile(u'open("___code___.py","w").write("# -*- coding: utf-8 -*-\\n" + _support_.preparse_worksheet_cell(base64.b64decode("WCA9IEIudHlwZSgp"),globals())+"\\n"); execfile(os.path.abspath("___code___.py"))' + '\n', '', 'single')
  File "", line 1, in <module>
    
  File "/tmp/tmpkchgAU/___code___.py", line 2, in <module>
    exec compile(u'X = B.type()' + '\n', '', 'single')
  File "", line 1, in <module>
    
  File "element.pyx", line 332, in sage.structure.element.Element.__getattr__ (sage/structure/element.c:3472)
  File "misc.pyx", line 204, in sage.structure.misc.getattr_from_other_class (sage/structure/misc.c:1509)
AttributeError: 'sage.matrix.matrix_integer_dense.Matrix_integer_dense' object has no attribute 'type'
}}}

{{{id=8|
X
///
Full MatrixSpace of 2 by 3 dense matrices over Integer Ring
}}}

{{{id=9|
M3 = matrix(X,[[1,2,3],[-4,-5,-6]]); M3
///
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "_sage_input_14.py", line 10, in <module>
    exec compile(u'open("___code___.py","w").write("# -*- coding: utf-8 -*-\\n" + _support_.preparse_worksheet_cell(base64.b64decode("TTMgPSBtYXRyaXgoWCxbWzEsMiwzXSxbLTQsLTUsLTZdXSk7IE0z"),globals())+"\\n"); execfile(os.path.abspath("___code___.py"))' + '\n', '', 'single')
  File "", line 1, in <module>
    
  File "/tmp/tmpd9s2_K/___code___.py", line 3, in <module>
    exec compile(u'M3 = matrix(X,[[_sage_const_1 ,_sage_const_2 ,_sage_const_3 ],[-_sage_const_4 ,-_sage_const_5 ,-_sage_const_6 ]]); M3' + '\n', '', 'single')
  File "", line 1, in <module>
    
  File "/opt/sage-5.2-linux-64bit-ubuntu_12.04_lts-x86_64-Linux/local/lib/python2.7/site-packages/sage/matrix/constructor.py", line 654, in matrix
    raise ValueError, "Invalid matrix constructor.  Type matrix? for help"
ValueError: Invalid matrix constructor.  Type matrix? for help
}}}

{{{id=12|
B.list()
///
[1, 2, 3, -3, -2, -1]
}}}

{{{id=11|
M = MatrixSpace(ZZ,4,6); M
///
Full MatrixSpace of 4 by 6 dense matrices over Integer Ring
}}}

{{{id=10|
A in M
///
False
}}}

{{{id=13|
A.ncols()
///
5
}}}

{{{id=14|
A.nrows()
///
3
}}}

{{{id=15|
M.dimension()
///
24
}}}

{{{id=16|
A.dimensions(); A.nrows(), A.ncols()
///
(3, 5)
(3, 5)
}}}

{{{id=19|
M1 = MatrixSpace(ZZ,4)
///
}}}

{{{id=17|
M1.identity_matrix()
///
[1 0 0 0]
[0 1 0 0]
[0 0 1 0]
[0 0 0 1]
}}}

{{{id=18|
M.zero_matrix()
///
[0 0 0 0 0 0]
[0 0 0 0 0 0]
[0 0 0 0 0 0]
[0 0 0 0 0 0]
}}}

{{{id=20|
m = matrix(QQ,3,lambda i,j: i+j); m
///
[0 1 2]
[1 2 3]
[2 3 4]
}}}

{{{id=21|
v1 = vector([1,2,3]); v2 = vector([4,5,6])
///
}}}

{{{id=22|
m1 = matrix([v1,v2]); m1
///
[1 2 3]
[4 5 6]
}}}

{{{id=23|
g = graphs.PetersenGraph(); m = matrix(g); m; m.parent()
///
[0 1 0 0 1 1 0 0 0 0]
[1 0 1 0 0 0 1 0 0 0]
[0 1 0 1 0 0 0 1 0 0]
[0 0 1 0 1 0 0 0 1 0]
[1 0 0 1 0 0 0 0 0 1]
[1 0 0 0 0 0 0 1 1 0]
[0 1 0 0 0 0 0 0 1 1]
[0 0 1 0 0 1 0 0 0 1]
[0 0 0 1 0 1 1 0 0 0]
[0 0 0 0 1 0 1 1 0 0]
Full MatrixSpace of 10 by 10 dense matrices over Integer Ring
}}}

{{{id=24|
m.determinant()
///
48
}}}

{{{id=25|
m1 = m.inverse(); m1
///
[ 1/3  1/3 -1/6 -1/6  1/3  1/3 -1/6 -1/6 -1/6 -1/6]
[ 1/3  1/3  1/3 -1/6 -1/6 -1/6  1/3 -1/6 -1/6 -1/6]
[-1/6  1/3  1/3  1/3 -1/6 -1/6 -1/6  1/3 -1/6 -1/6]
[-1/6 -1/6  1/3  1/3  1/3 -1/6 -1/6 -1/6  1/3 -1/6]
[ 1/3 -1/6 -1/6  1/3  1/3 -1/6 -1/6 -1/6 -1/6  1/3]
[ 1/3 -1/6 -1/6 -1/6 -1/6  1/3 -1/6  1/3  1/3 -1/6]
[-1/6  1/3 -1/6 -1/6 -1/6 -1/6  1/3 -1/6  1/3  1/3]
[-1/6 -1/6  1/3 -1/6 -1/6  1/3 -1/6  1/3 -1/6  1/3]
[-1/6 -1/6 -1/6  1/3 -1/6  1/3  1/3 -1/6  1/3 -1/6]
[-1/6 -1/6 -1/6 -1/6  1/3 -1/6  1/3  1/3 -1/6  1/3]
}}}

{{{id=26|
m * m1, m1 * m
///
(
[1 0 0 0 0 0 0 0 0 0]  [1 0 0 0 0 0 0 0 0 0]
[0 1 0 0 0 0 0 0 0 0]  [0 1 0 0 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 0]  [0 0 1 0 0 0 0 0 0 0]
[0 0 0 1 0 0 0 0 0 0]  [0 0 0 1 0 0 0 0 0 0]
[0 0 0 0 1 0 0 0 0 0]  [0 0 0 0 1 0 0 0 0 0]
[0 0 0 0 0 1 0 0 0 0]  [0 0 0 0 0 1 0 0 0 0]
[0 0 0 0 0 0 1 0 0 0]  [0 0 0 0 0 0 1 0 0 0]
[0 0 0 0 0 0 0 1 0 0]  [0 0 0 0 0 0 0 1 0 0]
[0 0 0 0 0 0 0 0 1 0]  [0 0 0 0 0 0 0 0 1 0]
[0 0 0 0 0 0 0 0 0 1], [0 0 0 0 0 0 0 0 0 1]
)
}}}

{{{id=105|
m^3
///
[0 5 2 2 5 5 2 2 2 2]
[5 0 5 2 2 2 5 2 2 2]
[2 5 0 5 2 2 2 5 2 2]
[2 2 5 0 5 2 2 2 5 2]
[5 2 2 5 0 2 2 2 2 5]
[5 2 2 2 2 0 2 5 5 2]
[2 5 2 2 2 2 0 2 5 5]
[2 2 5 2 2 5 2 0 2 5]
[2 2 2 5 2 5 5 2 0 2]
[2 2 2 2 5 2 5 5 2 0]
}}}

{{{id=27|
A
///
[   1   -2    2   -2   -2]
[   2   -1    1 -1/2    1]
[   1    1    0    0   -2]
}}}

{{{id=28|
A.hermite_form()
///
[   1   -2    2   -2   -2]
[   0    3   -3  7/2    5]
[   0    0    1 -3/2   -5]
}}}

{{{id=29|
A.rref()  # forma de Hermite por filas
///
[    1     0     0   1/3   4/3]
[    0     1     0  -1/3 -10/3]
[    0     0     1  -3/2    -5]
}}}

{{{id=107|
C = random_matrix(QQ,4); C
///
[ 0  1  0 -1]
[ 1 -1  1  0]
[ 2  1  0 -2]
[-2  2 -2  2]
}}}

{{{id=109|
def cref(M):  # forma de Hermite por columnas 
    return ((M.transpose()).rref()).transpose()
///
}}}

{{{id=110|
cref(C)
///
[1 0 0 0]
[0 1 0 0]
[0 0 1 0]
[0 0 0 1]
}}}

{{{id=30|
A = random_matrix(ZZ, 4); B = random_matrix(ZZ,4,2); A; B
///
[  0  -1  -9   6]
[  0   2   2  -5]
[  5  -3  -1   1]
[ -1   0   9 -10]
[ 2 -3]
[-4  0]
[ 0  1]
[ 2  2]
}}}

{{{id=31|
X = A.solve_right(B); X
///
[ -25/206  173/309]
[  -3/206 -383/309]
[-233/412 -325/206]
[ 253/412  375/206]
}}}

{{{id=32|
b = vector([1,4,7,90]); b
///
(1, 4, 7, 90)
}}}

{{{id=35|
X = A.solve_right(b); X
///
(-1566/103, 1423/103, -2918/103, 2226/103)
}}}

{{{id=33|
S = matrix(Integers(7),3,[2,1,3,1,3,5,5,5,4]); S
///
[2 1 3]
[1 3 5]
[5 5 4]
}}}

{{{id=36|
R = matrix(Integers(7),3,[6,1,6]); R
///
[6]
[1]
[6]
}}}

{{{id=34|
Y = S.solve_right(R); Y
///
[2]
[2]
[0]
}}}

{{{id=45|
S\R
///
[2]
[2]
[0]
}}}

{{{id=43|
R = matrix(Integers(7),3,[6,1,5])
///
}}}

{{{id=44|
Y = S.solve_right(R); Y
///
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "_sage_input_7.py", line 10, in <module>
    exec compile(u'open("___code___.py","w").write("# -*- coding: utf-8 -*-\\n" + _support_.preparse_worksheet_cell(base64.b64decode("WSA9IFMuc29sdmVfcmlnaHQoUik7IFk="),globals())+"\\n"); execfile(os.path.abspath("___code___.py"))' + '\n', '', 'single')
  File "", line 1, in <module>
    
  File "/tmp/tmpiEEouu/___code___.py", line 2, in <module>
    exec compile(u'Y = S.solve_right(R); Y' + '\n', '', 'single')
  File "", line 1, in <module>
    
  File "matrix2.pyx", line 303, in sage.matrix.matrix2.Matrix.solve_right (sage/matrix/matrix2.c:4584)
  File "matrix2.pyx", line 421, in sage.matrix.matrix2.Matrix._solve_right_general (sage/matrix/matrix2.c:5391)
ValueError: matrix equation has no solutions
}}}

{{{id=39|
S =  matrix(Integers(7),3,[2,1,3,1,3,5,5,5,4]); S
///
[2 1 3]
[1 3 5]
[5 5 4]
}}}

{{{id=37|
S.rank()
///
2
}}}

{{{id=111|
C = matrix(Integers(7),3,[2,1,3,6,1,3,5,1,5,5,4,5]); S
///
[2 1 3]
[1 3 5]
[5 5 4]
}}}

{{{id=112|
C.rank()
///
3
}}}

{{{id=38|
S.rref(), C.rref()
///
(
[1 0 5]  [1 0 5 0]
[0 1 0]  [0 1 0 0]
[0 0 0], [0 0 0 1]
)
}}}

{{{id=40|
T = S.transpose(); T
///
[2 1 5]
[1 3 5]
[3 5 4]
}}}

{{{id=41|
U = T.rref(); U.transpose()
///
[1 0 0]
[0 1 0]
[2 1 0]
}}}

{{{id=48|
S.determinant()
///
0
}}}

{{{id=113|
# Cambiar de base:
///
}}}

{{{id=114|
""" 
Considerar en (Z_7)^3 las bases B =<(1,2,3),(3,5,2),(4,4,6)>
y B' = <(3,1,6),(2,5,1),(3,2,4)> y encontrar la matriz del cambio de base
de B a B'
"""
///
}}}

{{{id=115|
C = matrix(Integers(7),3,[3,2,3,1,5,2,6,1,4]); C
///
[3 2 3]
[1 5 2]
[6 1 4]
}}}

{{{id=116|
X = matrix(Integers(7),3,[1,3,4,2,5,4,3,2,6]); X
///
[1 3 4]
[2 5 4]
[3 2 6]
}}}

{{{id=118|
Y = C\X ; Y   # esta es la matriz del cambio de base de B a B'
///
[6 0 0]
[2 4 1]
[0 3 3]
}}}

{{{id=117|
Y*matrix(Integers(7),3,[3,2,1])
///
[4]
[1]
[2]
}}}

{{{id=58|
# Herramientas
///
}}}

{{{id=59|
A = matrix(QQ, 3, range(12));
B = matrix(QQ, 3, range(9)); A; B
///
[ 0  1  2  3]
[ 4  5  6  7]
[ 8  9 10 11]
[0 1 2]
[3 4 5]
[6 7 8]
}}}

{{{id=60|
A.augment(B)
///
[ 0  1  2  3  0  1  2]
[ 4  5  6  7  3  4  5]
[ 8  9 10 11  6  7  8]
}}}

{{{id=53|
S=matrix(Integers(7),3,[2,1,3,6,1,3,5,1,5,5,4,6]); S
///
[2 1 3 6]
[1 3 5 1]
[5 5 4 6]
}}}

{{{id=63|
X=S.column(3); X
///
(6, 1, 6)
}}}

{{{id=65|
T = column_matrix(Integers(7),X); T
///
[6]
[1]
[6]
}}}

{{{id=64|
S.row(2); S.row(-1)
///
(5, 5, 4, 6)
(5, 5, 4, 6)
}}}

{{{id=69|
S.columns()
///
[(2, 1, 5), (1, 3, 5), (3, 5, 4), (6, 1, 6)]
}}}

{{{id=99|
S.list()
///
[2, 1, 3, 6, 1, 3, 5, 1, 5, 5, 4, 6]
}}}

{{{id=75|
C = S.delete_columns([3]); C; S
///
[2 1 3]
[1 3 5]
[5 5 4]
[2 1 3 6]
[1 3 5 1]
[5 5 4 6]
}}}

{{{id=80|
M = MatrixSpace(Integers(7),3,3)
///
}}}

{{{id=81|
A = M(range(9)); A
///
[0 1 2]
[3 4 5]
[6 0 1]
}}}

{{{id=82|
Z = A.matrix_from_columns([2,1]); Z; A
///
[2 1]
[5 4]
[1 0]
[0 1 2]
[3 4 5]
[6 0 1]
}}}

{{{id=83|
Z=A.matrix_from_rows([2,1]); Z,A
///
(
         [0 1 2]
[6 0 1]  [3 4 5]
[3 4 5], [6 0 1]
)
}}}

{{{id=84|
A.matrix_from_rows_and_columns([1], [0,2])
///
[3 5]
}}}

{{{id=85|
A.matrix_from_rows_and_columns([1,2], [1,2])
///
[4 5]
[0 1]
}}}

{{{id=73|
# discutir un sistema a partir de la matriz ampliada
///
}}}

{{{id=74|
S=matrix(Integers(7),3,[2,1,3,6,1,3,5,1,5,5,4,6]); S  # S es la matriz ampliada de un sistema
///
[2 1 3 6]
[1 3 5 1]
[5 5 4 6]
}}}

{{{id=71|
C = S.delete_columns([3]); C; S
///
[2 1 3]
[1 3 5]
[5 5 4]
[2 1 3 6]
[1 3 5 1]
[5 5 4 6]
}}}

{{{id=72|
rank(C); rank(S)   # el sistema es compatible indeterminado
///
2
2
}}}

{{{id=67|
# discutir un sistema a partir de la matriz de coeficientes más la matriz de constantes
///
}}}

{{{id=86|
C = matrix(Integers(5),2,[1,3,3,4]); C
///
[1 3]
[3 4]
}}}

{{{id=91|
rank(C)
///
1
}}}

{{{id=87|
v = vector([2,2])
///
}}}

{{{id=88|
I = column_matrix(Integers(5),v); I
///
[2]
[2]
}}}

{{{id=89|
S = C.augment(I); S
///
[1 3 2]
[3 4 2]
}}}

{{{id=90|
rank(C), rank(S)     # no tiene solución
///
(1, 2)
}}}

{{{id=68|
C = matrix(Integers(7),3,[2,1,3,1,3,5,5,5,4]); C             # otro ejemplo
///
[2 1 3]
[1 3 5]
[5 5 4]
}}}

{{{id=76|
v = vector([6,1,6])
///
}}}

{{{id=77|
I = column_matrix(Integers(7),v); I
///
[6]
[1]
[6]
}}}

{{{id=78|
S = C.augment(I); S
///
[2 1 3 6]
[1 3 5 1]
[5 5 4 6]
}}}

{{{id=79|
rank(S), rank(C)        # sistema compatible indeterminado
///
(2, 2)
}}}

{{{id=100|
C\I
///
[2]
[2]
[0]
}}}

{{{id=54|
HS = S.rref(); HS
///
[1 0 5 2]
[0 1 0 2]
[0 0 0 0]
}}}

{{{id=47|
# Otros
///
}}}

{{{id=49|
S.kernel()
///
Vector space of degree 3 and dimension 1 over Ring of integers modulo 7
Basis matrix:
[1 4 3]
}}}

{{{id=92|
# Matriz con un parámetro; matrices sobre un anillo simbólico
///
}}}

{{{id=97|
var('a')
///
a
}}}

{{{id=50|
S1 = matrix([[1,a,3],[-4,-5,-6]]); S1; S1.parent()
///
[ 1  a  3]
[-4 -5 -6]
Full MatrixSpace of 2 by 3 dense matrices over Symbolic Ring
}}}

{{{id=51|
S1.rref()
///
[                 1                  0 -6*a/(4*a - 5) + 3]
[                 0                  1        6/(4*a - 5)]
}}}

{{{id=93|
S2 = matrix(QQ,2,[1,4,3,-4,-5,-6])
///
}}}

{{{id=94|
S2.rref()         # en este ejemplo le hemos dado a "a" el valor 4
///
[   1    0 9/11]
[   0    1 6/11]
}}}

{{{id=96|
S3 = matrix(2,[1,a,3,2]); S3
///
[1 a]
[3 2]
}}}

{{{id=101|
S3.rref()   # habrá valores cuerpos y valores de a en los que esto falle
///
[1 0]
[0 1]
}}}

{{{id=102|

///
}}}