alem_1516_leccion_06
system:sage


{{{id=1|
# Espacios Vectoriales
///
}}}

{{{id=10|
# Subespacios vectoriales
///
}}}

{{{id=2|
V = VectorSpace(GF(5),4)    # Así se define un espacio vectorial, p.e., (Z_5)^4
///
}}}

{{{id=3|
S = V.subspace([V([1,2,3,4]),V([3,1,2,3]),V([4,3,4,0])])  # Subespacio dado por conjunto de generadores
///
}}}

{{{id=4|
S.basis()    # calcula una base de S
///
[
(1, 2, 0, 3),
(0, 0, 1, 2)
]
}}}

{{{id=14|
B = S.basis_matrix(); B
///
[1 2 0 3]
[0 0 1 2]
}}}

{{{id=56|
B.transpose()
///
[1 0]
[2 0]
[0 1]
[3 2]
}}}

{{{id=9|
S.dimension()
///
2
}}}

{{{id=8|
def cref(M):  # forma de Hermite por columnas 
    return ((M.transpose()).rref()).transpose()
///
}}}

{{{id=5|
A = matrix(Integers(5),4,[1,3,4,2,1,3,3,2,4,4,3,0]); A
///
[1 3 4]
[2 1 3]
[3 2 4]
[4 3 0]
}}}

{{{id=6|
B = cref(A); B   # Cálculo de la base de un sub. vec. usando la forma de Hermite por columnas
///
[1 0 0]
[2 0 0]
[0 1 0]
[3 2 0]
}}}

{{{id=57|
AF = matrix(Integers(5),3,[1,2,3,4,3,1,2,3,4,3,4,0]); AF
///
[1 2 3 4]
[3 1 2 3]
[4 3 4 0]
}}}

{{{id=59|
AF.rref()
///
[1 2 0 3]
[0 0 1 2]
[0 0 0 0]
}}}

{{{id=16|
# Otra forma
///
}}}

{{{id=17|
U = QQ^5
///
}}}

{{{id=18|
a = U([2,5,7,2,7]); b = U([2,0,8,2,5]); c = U([1,8,3,2,-90])
///
}}}

{{{id=19|
W = U.subspace([a,b])   # El subespacio generado por a y b
///
}}}

{{{id=20|
W.basis_matrix()
///
[   1    0    4    1  5/2]
[   0    1 -1/5    0  2/5]
}}}

{{{id=21|
Z = U.subspace_with_basis([a,b])    # Crear un subespacio donde a y b sean base
///
}}}

{{{id=22|
Z.basis_matrix()
///
[2 5 7 2 7]
[2 0 8 2 5]
}}}

{{{id=23|
Z == W      # Es detectado que Z y W son el mismo subespacio.
///
True
}}}

{{{id=24|
# Operaciones con subespacios
///
}}}

{{{id=25|
V = QQ^5
///
}}}

{{{id=26|
a = V([2,5,7,2,7]); b = V([2,0,8,2,5]); c = V([1,8,3,2,-90])
///
}}}

{{{id=27|
W = V.subspace([a,b])
///
}}}

{{{id=28|
Z = V.subspace([b,c])
///
}}}

{{{id=29|
W.degree(), W.dimension()
///
(5, 2)
}}}

{{{id=30|
W.intersection(Z)   # Cálculo de la intersección de Z y W
///
Vector space of degree 5 and dimension 1 over Rational Field
Basis matrix:
[  1   0   4   1 5/2]
}}}

{{{id=31|
W + Z      # Cálculo de la suma
///
Vector space of degree 5 and dimension 3 over Rational Field
Basis matrix:
[     1      0      0  -17/3 1281/2]
[     0      1      0    1/3  -63/2]
[     0      0      1    5/3 -319/2]
}}}

{{{id=7|
# Matrices y espacios vectoriales
///
}}}

{{{id=13|
V = VectorSpace(GF(7),3)
///
}}}

{{{id=32|
A = matrix(GF(7),3,[3,4,2,5,1,3,0,4,6]); A
///
[3 4 2]
[5 1 3]
[0 4 6]
}}}

{{{id=33|
A.right_kernel()   # Cálculo del núcleo de la aplicación lineal asociada a A
///
Vector space of degree 3 and dimension 1 over Finite Field of size 7
Basis matrix:
[1 5 6]
}}}

{{{id=34|
A*V([1,5,6])   # Efectivamente V([1,5,6]) es un vector de la base
///
(0, 0, 0)
}}}

{{{id=61|
AT = A.transpose()  # para trabajar por filas transponemos
///
}}}

{{{id=62|
AT.left_kernel()    # y buscamos el núcleo a izquierda
///
Vector space of degree 3 and dimension 1 over Finite Field of size 7
Basis matrix:
[1 5 6]
}}}

{{{id=63|
V([1,5,6])*AT   # Efectivamente V([1,5,6]) es un vector de la base
///
(0, 0, 0)
}}}

{{{id=35|
cref(A)        # Así se calcula una base de la imagen.
///
[1 0 0]
[0 1 0]
[2 3 0]
}}}

{{{id=36|
# Polinomio característico y autovectores
///
}}}

{{{id=37|
A = diagonal_matrix(QQ,[4, 4, -5, 1, 12]); A
///
[ 4  0  0  0  0]
[ 0  4  0  0  0]
[ 0  0 -5  0  0]
[ 0  0  0  1  0]
[ 0  0  0  0 12]
}}}

{{{id=38|
B = random_matrix(ZZ, 5, x = 5); B  # ninguna entrada mayor que 5
///
[4 3 3 0 0]
[2 1 4 1 0]
[4 2 0 4 2]
[0 0 2 4 1]
[1 4 4 1 2]
}}}

{{{id=39|
C = B * A * B^(-1); C
///
[   83/26   911/52  -705/26  -228/13   239/13]
[   30/13   354/13  -564/13  -396/13   554/13]
[   63/26  1089/52  -823/26  -330/13   414/13]
[     3/2     91/4    -69/2      -20       25]
[   81/26  1467/52 -1125/26  -402/13   484/13]
}}}

{{{id=40|
f = C.charpoly(); f
///
x^5 - 16*x^4 + 27*x^3 + 356*x^2 - 1328*x + 960
}}}

{{{id=41|
g = C.minpoly(); g
///
x^4 - 12*x^3 - 21*x^2 + 272*x - 240
}}}

{{{id=42|
g.divides(f) # El polinomio mínimo siempre es un divisor del característico
///
True
}}}

{{{id=43|
f.roots(); g.roots()
///
[(12, 1), (1, 1), (-5, 1), (4, 2)]
[(12, 1), (4, 1), (1, 1), (-5, 1)]
}}}

{{{id=44|
C.eigenvalues()   # El autovalor doble aparece dos veces
///
[12, 1, -5, 4, 4]
}}}

{{{id=45|
factor(C.charpoly())
///
(x - 12) * (x - 1) * (x + 5) * (x - 4)^2
}}}

{{{id=46|
C.eigenspaces_right()
///
[
(12, Vector space of degree 5 and dimension 1 over Rational Field
User basis matrix:
[0 1 4 0 3]),
(1, Vector space of degree 5 and dimension 1 over Rational Field
User basis matrix:
[  1 1/4 3/4 1/2   0]),
(-5, Vector space of degree 5 and dimension 1 over Rational Field
User basis matrix:
[  0   0   1 1/2   0]),
(4, Vector space of degree 5 and dimension 2 over Rational Field
User basis matrix:
[  1   1   0  -2 1/3]
[  0   0   1   2 1/3])
]
}}}

{{{id=47|
C * vector([0,1,4,0,3])     # El primero es efectivamente un autovector de valor 12
///
(0, 12, 48, 0, 36)
}}}

{{{id=48|
# Ejercicio
///
}}}

{{{id=49|
""" 
Considerar en (Z_7)^3 las bases B =<(1,2,3),(3,5,2),(4,4,6)>
y B' = <(3,1,6),(2,5,1),(3,2,4)> y encontrar la matriz del cambio de base
de B a B'
"""
///
}}}

{{{id=50|
C = matrix(Integers(7),3,[3,2,3,1,5,2,6,1,4]); C
///
[3 2 3]
[1 5 2]
[6 1 4]
}}}

{{{id=51|
I = matrix(Integers(7),3,[1,3,4,2,5,4,3,2,6]); I
///
[1 3 4]
[2 5 4]
[3 2 6]
}}}

{{{id=52|
Y = C\I ; Y # matriz del cambio de base de B a B'
///
[6 0 0]
[2 4 1]
[0 3 3]
}}}

{{{id=53|
Y * matrix(Integers(7),3,[3,2,1])  # (3,2,1) es el vector en la base B  y (4,1,2) es el vector en la base B'
///
[4]
[1]
[2]
}}}

{{{id=54|
Y.inverse()   #  Matriz del cambio de base de B' a B
///
[6 0 0]
[3 5 3]
[4 2 2]
}}}

{{{id=55|

///
}}}